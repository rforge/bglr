Development started with a fresh copy of the package  RScaLAPACK, version 0.6.1
http://cran.r-project.org/src/contrib/Archive/RScaLAPACK/RScaLAPACK_0.6.1.tar.gz


Added/modified:
	* NAMESPACE file added
	* configure.ac file added
	* configure file added
	* scalapack-2.0.2 directory added. The tarball was obtained from http://www.netlib.org/scalapack/
	  the file xerbla.f was added to scalapack-2.02/SRC and xerbla.o was added to ALLAUX object
          file list in the corresponding Makefile to avoid compilation problems with the BLAS version included in R.
	* Makefile.in in src subdirectory was modified
	* Kernel_utils.c added
        * Plink_utils.c added
	* callpdgetcp.f added
        * CRscalapack.c modified to include the routine  CRSF_tcrossprod
        * Rscalapack.R modified to include sla.tcrossprod
	* ParallelAgent.c modified to include sla.tcrossprod
        * util_plink.R added
	* Kernel_utils.c added

perl -ne 'print "$. $_" if m/[\x80-\xFF]/' RScaLAPACK.R 

From pdbMPI-guide.pdf

pbdMPI installs successfuly, but fails at initialization when calling the function init() with error message

Error Message

/usr/lib/R/bin/exec/R: symbol lookup error: /usr/lib/openmpi/lib/openmpi/mca_paffinity_linux.so: undefined
symbol:
mca_base_param_reg_int

A: The linked library at installation may be different from the runtime library, especially when your system
has more than one MPI systems. Since the library at installation is detected by autoconf 
(configure) and automake (Makevars), it can be linked with OpenMPI library, but MPICH2 or LAM/MPI is 
searched before OpenMPI according to $PATH.
Solutions:

Check which MPI system is your favorite to call. If you use OpenMPI, then you have to link with OpenMPI. Similarly, for MPICH2.
Or, only kepp the MPI system you do like and drop others.
Use --with-Rmpi-type to specify the MPI type.
Use --with-Rmpi-include and --with-Rmpi-libpath to specify the right version	

